#include "DisplayManager.h"

DisplayManager::DisplayManager()
    : display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET) {}

bool DisplayManager::initialize() {
    Wire.begin(OLED_SDA, OLED_SCL);

    if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
        Serial.println(F("SSD1306 allocation failed"));
        return false;
    }

    display.clearDisplay();
    display.display();
    return true;
}

void DisplayManager::clear() {
    display.clearDisplay();
}

void DisplayManager::printMessage(const String& message, int textSize, int x, int y) {
    display.clearDisplay();
    display.setTextSize(textSize);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(x, y);
    display.print(message);
    display.display();
}

void DisplayManager::println(const String& message, int textSize, int x, int y) {
    display.setTextSize(textSize);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(x, y);
    display.println(message); // Print with a newline
    display.display();
}


void DisplayManager::displayNeZha() {
    display.clearDisplay();
    display.drawBitmap(10, 10, epd_bitmap_nezha, 90, 50, SSD1306_WHITE); 
    display.display();
}


const uint8_t DisplayManager::epd_bitmap_nezha[] PROGMEM = {
// 'nezha-head', 90x50px
0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xf6, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xd0, 0xaf, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x00, 0x01, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x00, 0x17, 0x7f, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x80, 0x85, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0xff, 0xff, 0xc2, 0x3d, 0xb7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xe7, 0xee, 
0xd9, 0x6f, 0xff, 0xfc, 0x07, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfd, 0xeb, 0x6a, 0x4d, 0xbf, 0xf8, 
0x04, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x36, 0x43, 0xbb, 0xed, 0xe0, 0x00, 0x3f, 0xff, 0xc0, 
0xff, 0xff, 0xe4, 0xdd, 0x84, 0x2e, 0x65, 0x20, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xff, 0xb1, 0x1b, 
0xa0, 0x41, 0xb4, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xff, 0x00, 0x03, 0xf0, 0x17, 0x9e, 0x40, 
0x00, 0x8f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x24, 0x5c, 0x00, 0x63, 0x00, 0x00, 0x1f, 0xff, 0xc0, 
0xff, 0xf8, 0x00, 0x11, 0x0f, 0x09, 0x39, 0x08, 0x00, 0x7f, 0xff, 0xc0, 0xff, 0xf0, 0x00, 0x00, 
0x21, 0x80, 0x84, 0x02, 0x09, 0xff, 0xff, 0xc0, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x40, 0x16, 0x00, 
0x47, 0xff, 0xff, 0xc0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 
0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x88, 0x00, 0x03, 0xc0, 0xff, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x21, 0x22, 0x48, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x11, 0x29, 0x07, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0xf9, 0x3f, 0xc0, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xff, 0x3f, 0xc0, 0xff, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x12, 0x1f, 0xff, 0xc0, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x03, 0xff, 0xc0, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x41, 0xff, 0xc0, 
0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x87, 0xff, 0xc0, 0xff, 0xfe, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7f, 0x3f, 0xff, 0xc0, 0xff, 0xcb, 0xf0, 0x00, 0x20, 0x02, 0x00, 0x00, 
0x7f, 0xff, 0xff, 0xc0, 0xff, 0xf3, 0x33, 0xc6, 0x25, 0xfc, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 
0xff, 0xcc, 0xcc, 0xfb, 0xdd, 0x67, 0x00, 0x00, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xd3, 0xb3, 0x29, 
0xdb, 0x7a, 0x00, 0x01, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xd8, 0xb6, 0xdc, 0x81, 0x9b, 0x80, 0x0f, 
0x7f, 0xff, 0xff, 0xc0, 0xff, 0x9e, 0x19, 0x96, 0x04, 0xb7, 0xc0, 0x39, 0xff, 0xff, 0xff, 0xc0, 
0xff, 0x8e, 0x0c, 0x40, 0x00, 0x6c, 0xc0, 0x64, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xe1, 0xce, 0x03, 
0x06, 0x5b, 0x70, 0xcd, 0xbf, 0xff, 0xff, 0xc0, 0xff, 0xb0, 0x09, 0xaf, 0xcb, 0x37, 0x73, 0x92, 
0x4f, 0xff, 0xff, 0xc0, 0xff, 0x9e, 0xe1, 0x1d, 0xff, 0x95, 0x9a, 0x16, 0x7f, 0xff, 0xff, 0xc0, 
0xff, 0xca, 0x36, 0x40, 0x30, 0x1d, 0xee, 0x48, 0xbf, 0xff, 0xff, 0xc0, 0xff, 0xeb, 0x99, 0xb6, 
0x8d, 0xe6, 0x6d, 0x03, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xe3, 0x61, 0x93, 0xef, 0x3b, 0xb7, 0xf7, 
0xff, 0xff, 0xff, 0xc0, 0xff, 0xf9, 0x6e, 0x6c, 0x62, 0xdb, 0xb7, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0xff, 0xfc, 0xd3, 0x28, 0x10, 0xd6, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x17, 0x78, 
0x71, 0x34, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0x60, 0x4c, 0x87, 0x2f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xcd, 0x01, 0xb4, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0xff, 0xff, 0xf3, 0x76, 0x49, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x93, 
0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};